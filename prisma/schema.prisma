// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Vehicle {
  id              String            @id @unique
  vehicleNumber   String            @unique
  vehicleType     VehicleType
  vehicleRunKM    Int
  vehicleFuelType FuelType
  vehicleKMLimit  Int
  vehicleDriver   VehicleDriver?
  vehicleLocation VehicleLocation[]
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Notification    Notification[]
}

model VehicleDriver {
  id        String  @id @default(uuid())
  vehicleId String  @unique
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
  name      String
}

model VehicleLocation {
  id        String   @id @default(uuid())
  latitude  Float
  longitude Float
  speed     Float
  vehicleId String
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  time      DateTime @default(now())
}

model Notification {
  id        String   @id @default(uuid())
  vehicleId String
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  message   String
  time      DateTime @default(now())
}

model Admin {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum FuelType {
  Petrol
  Diesel
}

enum VehicleType {
  Motorcycle
  Ton25
  ALS
  TATRA
  WB
  Bus
  Safari
  Scorpio
}
